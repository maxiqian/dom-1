{"mappings":"AAAA,aAAa;AACb,MAAM,MAAM,IAAI,MAAM,CAAC;AACvB,QAAQ,GAAG,CAAC;AACZ,YAAY;AACZ,IAAI,KAAK,CAAC,MAAK;AACf,WAAW;AACX,MAAM,OAAO,IAAI,MAAM,CAAC;AACxB,IAAI,IAAI,CAAC,MAAK;AACd,YAAY;AACZ,MAAM,QAAQ,IAAI,KAAK,CAAC,OAAO,KAAK;AACpC,QAAQ,GAAG,CAAC;AACZ,WAAW;AACX,IAAI;AACJ,IAAI,IAAI,CAAC,MAAK,SAAQ;AACtB,IAAI;AACJ,MAAM,QAAQ,IAAI,IAAI,CAAC,MAAK;AAC5B,QAAQ,GAAG,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC;AAC5B,WAAW;AACX,IAAI;AACJ,IAAI,IAAI,CAAC,MAAK;AACd,IAAI;AACJ,MAAM,OAAO,IAAI,IAAI,CAAC;AACtB,QAAQ,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC;AAC1B,YAAY;AACZ,IAAI;AACJ,IAAI,KAAK,CAAC,MAAK;IAAC,QAAO;IAAgB,OAAM;AAAM;AACnD,IAAI;AACJ,QAAQ,GAAG,CAAC,IAAI,KAAK,CAAC,MAAK;AAC3B,SAAS;AACT,IAAI,KAAK,CAAC,MAAK,UAAS;AACxB,YAAY;AACZ,IAAI,KAAK,CAAC,GAAG,CAAC,MAAK;AACnB,IAAI,KAAK,CAAC,GAAG,CAAC,MAAK;AACnB,IAAI,KAAK,CAAC,MAAM,CAAC,MAAK;AACtB,QAAQ,GAAG,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAK;AACpC,SAAS;AACT,MAAM,KAAK,IAAI;IACX,QAAQ,GAAG,CAAC;AAChB;AACA,IAAI,EAAE,CAAC,MAAK,SAAQ;AACpB,IAAI,GAAG,CAAC,MAAK,SAAQ;AACrB,WAAW;AACX,MAAM,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;AACpC,QAAQ,GAAG,CAAC;AACZ,MAAM,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;AACnC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,QAAO,MAAM,CAAC,EAAE;AACrC,YAAY;AACZ,QAAQ,GAAG,CAAC,IAAI,MAAM,CAAC;AACvB,eAAe;AACf,aAAa;AACb,MAAM,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;AAC7B,QAAQ,GAAG,CAAC,IAAI,QAAQ,CAAC;AACzB,UAAU;AACV,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC;AACrB,cAAc;AACd,QAAQ,GAAG,CAAC,IAAI,QAAQ,CAAC;AACzB,UAAU;AACV,MAAM,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE;AAChC,IAAI,IAAI,CAAC,IAAI,QAAQ,CAAC,IAAG,CAAC,IAAI,IAAI,KAAK,CAAC,GAAE,SAAQ;AAClD,WAAW;AACX,QAAQ,GAAG,CAAC,IAAI,KAAK,CAAC;AAGtB,IAAI;AACJ,MAAM,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,UAAU;;AACnD,IAAI,KAAK,CAAC,OAAO,SAAS,UAAU,qBAAqB;;AAEzD,MAAM,UAAU,IAAI,IAAI,CAAC,QAAQ,kBAAkB;;AACnD,IAAI,IAAI,CAAC,SAAS,CAAC,IAAK,QAAQ,GAAG,CAAC,IAAI,oBAAoB","sources":["src/main.js"],"sourcesContent":["// dom.create\r\nconst div = dom.create(\"<div>newDiv<div>\");\r\nconsole.log(div);\r\n// dom.after\r\ndom.after(test,div);\r\n// dom.wrap\r\nconst div3 = dom.create('<div id=\"parent\"></div>');\r\ndom.wrap(test,div3);\r\n// dom.empty\r\nconst nodes = dom.empty(window.empty);\r\nconsole.log(nodes);\r\n// dom.attr\r\n// 写\r\ndom.attr(test,'title','Hi, I am mxq');\r\n// 读\r\nconst title = dom.attr(test,'title');\r\nconsole.log(`title:${title}`);\r\n// dom.text\r\n// 写\r\ndom.text(test,'这是新的内容');\r\n// 读\r\nconst text = dom.text(test);\r\nconsole.log(`text:${text}`);\r\n// dom.style\r\n// 写\r\ndom.style(test,{border:'1px solid red',color:'blue'});\r\n// 读\r\nconsole.log(dom.style(test,'border'));\r\n// 也可以这样写\r\ndom.style(test,'border','1px solid black');\r\n// dom.class\r\ndom.class.add(test,'red');\r\ndom.class.add(test,'blue');\r\ndom.class.remove(test,'blue');\r\nconsole.log(dom.class.contains(test,'blue'));\r\n// dom.on\r\nconst fn = ()=>{\r\n    console.log('点击了');\r\n};\r\ndom.on(test,'click',fn);\r\ndom.off(test,'click',fn);\r\n// dom.find\r\nconst testDiv = dom.find('#test')[0];\r\nconsole.log(testDiv);\r\nconst test2 = dom.find('#test2')[0];\r\nconsole.log(dom.find('.red',test2)[0]);\r\n//dom.parent\r\nconsole.log(dom.parent(test));\r\n// dom.siblings\r\n// find的是一个数组\r\nconst s2 = dom.find('#s2')[0];\r\nconsole.log(dom.siblings(s2));\r\n//dom.next\r\nconsole.log(dom.next(s2));\r\n//dom.previous\r\nconsole.log(dom.previous(s2));\r\n//dom.each\r\nconst t = dom.find('#travel')[0];\r\ndom.each(dom.children(t),(n)=>dom.style(n,'color','red'));\r\n//dom.index\r\nconsole.log(dom.index(s2));\r\n\r\n\r\n//测试\r\nconst test3 = dom.find('#test3>.red')[0] // 获取对应的元素\r\ndom.style(test3, 'color', 'yellow') // 设置 div.style.color\r\n\r\nconst divList = dom.find('.red') // 获取多个 div.red 元素\r\ndom.each(divList, (n)=> console.log(n)) // 遍历 divList 里的所有元素\r\n"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}